---
description: Cursor rules derived by SpecStory from the project AI interaction history
globs: *
---

## PROJECT OVERVIEW
This project is a phone call agent application built with Next.js, Tailwind CSS, and Lucide React icons.  It uses Twilio for call handling and ElevenLabs for speech-to-text and text-to-speech functionalities.  The application includes user onboarding and call summarization features.  Version 1.0.

## CODE STYLE
Follow standard JavaScript/TypeScript conventions.  Use consistent indentation (2 spaces).  Commit messages should be concise and descriptive.

## FOLDER ORGANIZATION
The project follows a standard Next.js folder structure.  Components are organized within the `components` directory, further categorized by UI elements and functional components.

## TECH STACK
- Next.js
- TypeScript
- Tailwind CSS
- Lucide React
- Twilio
- ElevenLabs
- WebSocket

## PROJECT-SPECIFIC STANDARDS
- `.env` files should contain sensitive information (API keys, database credentials).  A `.env.example` file should be included with placeholder values to guide developers.  Do not commit `.env` files to version control.
- Use `NEXT_PUBLIC_API_BASE_URL` and `NEXT_PUBLIC_WS_BASE_URL` environment variables for API and WebSocket URLs respectively.  `NEXT_PUBLIC_WS_BASE_URL` should only contain the base URL; the specific endpoint path (e.g., `/transcription-stream/:callSid`) should be appended in the client-side code.
- The `.env.example` file should include clear instructions for developers to replace placeholder values with their actual values.  Example:

```plaintext
# .env.example

# Base URL for the API
# Replace 'https://your-api-url.com' with the actual base URL of your API.
# This URL is used for making API requests from your application.
NEXT_PUBLIC_API_BASE_URL=https://your-api-url.com

# Base URL for the WebSocket connection
# Replace 'wss://your-websocket-url.com' with the actual WebSocket URL.
# This URL is used for establishing a WebSocket connection for real-time features.
# Note: The WebSocket URL should not include the specific endpoint for the call (e.g., /transcription-stream/:callSid).
NEXT_PUBLIC_WS_BASE_URL=wss://your-websocket-url.com
```

## WORKFLOW & RELEASE RULES
Use Git for version control.  Create descriptive commit messages.  Follow a standard branching strategy (e.g., Gitflow).  Regularly run `npm audit fix` to address security vulnerabilities.

## REFERENCE EXAMPLES
- `.gitignore` file should include patterns to ignore sensitive files such as `.env`, `.env*.local`, `.next`, `node_modules`, etc.  See https://help.github.com/articles/ignoring-files/ for more about ignoring files.  An example:

```
/node_modules
/.pnp
.pnp.js
.yarn/install-state.gz
/.next/
/out/
/build
.DS_Store
*.pem
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.env*.local
.env
.vercel
*.tsbuildinfo
next-env.d.ts
```

## PROJECT DOCUMENTATION & CONTEXT SYSTEM
All documentation should be written in Markdown.  Maintain a clear and concise README.md file.  Use comments effectively within code.

## DEBUGGING
Utilize browser developer tools for debugging JavaScript and network issues.  Add console logs strategically to track variable values and program flow.  For WebSocket debugging, inspect WebSocket messages using the browser's developer tools.

## FINAL DOs AND DON'Ts
- **DO** use descriptive variable names.
- **DO** write unit tests.
- **DO** commit frequently with descriptive commit messages.
- **DON'T** commit sensitive information to version control.
- **DON'T** hardcode URLs or API keys directly into the code.
- **DON'T** ignore security warnings from `npm audit`.